{"remainingRequest":"/Users/TCGIBMBP/Downloads/quiz/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/TCGIBMBP/Downloads/quiz/src/components/QuestionBox.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/TCGIBMBP/Downloads/quiz/src/components/QuestionBox.vue","mtime":1582843340483},{"path":"/Users/TCGIBMBP/Downloads/quiz/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/TCGIBMBP/Downloads/quiz/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/TCGIBMBP/Downloads/quiz/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/TCGIBMBP/Downloads/quiz/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBfIGZyb20gJ2xvZGFzaCcKZXhwb3J0IGRlZmF1bHQgewogICAgcHJvcHM6ewogICAgICAgIGN1cnJlbnRRdWVzdGlvbjogT2JqZWN0LAogICAgICAgIG5leHRRdWVzdGlvbjogRnVuY3Rpb24sCiAgICAgICAgaW5jcmVtZW50OiBGdW5jdGlvbgogICAgfSwKICAgIGRhdGEoKXsKICAgICAgICByZXR1cm57CiAgICAgICAgICAgIHNlbGVjdGVkSW5kZXg6IG51bGwsCiAgICAgICAgICAgIGNvcnJlY3RJbmRleDogbnVsbCwKICAgICAgICAgICAgc2h1ZmZsZWRBbnN3ZXJzOiBbXSwKICAgICAgICAgICAgYW5zd2VyZWQ6IGZhbHNlCiAgICAgICAgfQogICAgfSwKICAgIGNvbXB1dGVkOiB7CiAgICAgICAgYW5zd2VycygpewogICAgICAgICAgICBsZXQgYW5zd2VycyA9IFsuLi50aGlzLmN1cnJlbnRRdWVzdGlvbi5pbmNvcnJlY3RfYW5zd2Vyc10KICAgICAgICAgICAgYW5zd2Vycy5wdXNoKHRoaXMuY3VycmVudFF1ZXN0aW9uLmNvcnJlY3RfYW5zd2VyKQogICAgICAgICAgICByZXR1cm4gYW5zd2VycwogICAgICAgIH0KICAgIH0sCiAgICB3YXRjaDogewogICAgICAgIGN1cnJlbnRRdWVzdGlvbjogewogICAgICAgICAgICBpbW1lZGlhdGU6IHRydWUsCiAgICAgICAgICAgIGhhbmRsZXIoKXsKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICB0aGlzLnNlbGVjdGVkSW5kZXggPSBudWxsCiAgICAgICAgICAgICAgICAgICAgdGhpcy5hbnN3ZXJlZCA9IGZhbHNlCiAgICAgICAgICAgICAgICAgICAgdGhpcy5zaHVmZmxlQW5zd2VycygpCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICB9LAogICAgbWV0aG9kczogewogICAgICAgIHNlbGVjdEFuc3dlcihpbmRleCl7CiAgICAgICAgICAgIHRoaXMuc2VsZWN0ZWRJbmRleCA9IGluZGV4CiAgICAgICAgfSwKICAgICAgICBzdWJtaXRBbnN3ZXIoKXsKICAgICAgICAgICAgbGV0IGlzQ29ycmVjdCA9IGZhbHNlCgogICAgICAgICAgICBpZih0aGlzLnNlbGVjdGVkSW5kZXggPT09IHRoaXMuY29ycmVjdEluZGV4KXsKICAgICAgICAgICAgICAgIGlzQ29ycmVjdCA9IHRydWUKICAgICAgICAgICAgfQogICAgICAgICAgICB0aGlzLmFuc3dlcmVkID0gdHJ1ZQogICAgICAgICAgICB0aGlzLmluY3JlbWVudChpc0NvcnJlY3QpCiAgICAgICAgfSwKICAgICAgICBzaHVmZmxlQW5zd2VycygpewogICAgICAgICAgICBsZXQgYW5zd2VycyA9IFsuLi50aGlzLmN1cnJlbnRRdWVzdGlvbi5pbmNvcnJlY3RfYW5zd2VycywgdGhpcy5jdXJyZW50UXVlc3Rpb24uY29ycmVjdF9hbnN3ZXJdCiAgICAgICAgICAgIHRoaXMuc2h1ZmZsZWRBbnN3ZXJzID0gXy5zaHVmZmxlKGFuc3dlcnMpCiAgICAgICAgICAgIHRoaXMuY29ycmVjdEluZGV4ID0gdGhpcy5zaHVmZmxlZEFuc3dlcnMuaW5kZXhPZih0aGlzLmN1cnJlbnRRdWVzdGlvbi5jb3JyZWN0X2Fuc3dlcikKICAgICAgICB9LAogICAgICAgIGFuc3dlckNsYXNzKGluZGV4KXsKICAgICAgICAgICAgbGV0IGFuc3dlckNsYXNzID0gJycKCiAgICAgICAgICAgIGlmKCF0aGlzLmFuc3dlcmVkICYmIHRoaXMuc2VsZWN0SW5kZXggPT09IGluZGV4KXsKICAgICAgICAgICAgICAgIGFuc3dlckNsYXNzID0gJ3NlbGVjdGVkJwogICAgICAgICAgICB9IGVsc2UgaWYodGhpcy5hbnN3ZXJlZCAmJiB0aGlzLmNvcnJlY3RJbmRleCA9PT0gaW5kZXgpewogICAgICAgICAgICAgICAgYW5zd2VyQ2xhc3MgPSAnY29ycmVjdCcKICAgICAgICAgICAgfSBlbHNlIGlmKHRoaXMuYW5zd2VyZWQgJiYgdGhpcy5zZWxlY3RlZEluZGV4ID09PSBpbmRleCAmJiB0aGlzLmNvcnJlY3RJbmRleCAhPT0gaW5kZXgpewogICAgICAgICAgICAgICAgYW5zd2VyQ2xhc3MgPSAnaW5jb3JyZWN0JwogICAgICAgICAgICB9CiAgICAgICAgfQogICAgfQp9Cg=="},{"version":3,"sources":["QuestionBox.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"QuestionBox.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div class=\"question-box-container\">\n        <b-jumbotron>\n            <template v-slot:lead>\n                {{ currentQuestion.question }}\n            </template>\n\n            <hr class=\"my-4\">\n\n            <b-list-group>\n                <b-list-group-item\n                    v-for=\"(answer, index) in shuffledAnswers\"\n                    :key=\"index\"\n                    @click=\"selectAnswer(index)\"\n                    :class=\"answerClass(index)\"\n                >\n                    {{ answer }}\n                </b-list-group-item>\n            </b-list-group>\n\n            <b-button \n                @click=\"submitAnswer\"\n                variant=\"primary\"\n                :disabled=\"selectedIndex === null || answered\"\n            >\n                Submit\n            </b-button>\n\n            <b-button \n                @click=\"nextQuestion\" \n                variant=\"success\" \n            >\n                Next\n            </b-button>\n        </b-jumbotron>\n    </div>\n</template>\n\n<script>\nimport _ from 'lodash'\nexport default {\n    props:{\n        currentQuestion: Object,\n        nextQuestion: Function,\n        increment: Function\n    },\n    data(){\n        return{\n            selectedIndex: null,\n            correctIndex: null,\n            shuffledAnswers: [],\n            answered: false\n        }\n    },\n    computed: {\n        answers(){\n            let answers = [...this.currentQuestion.incorrect_answers]\n            answers.push(this.currentQuestion.correct_answer)\n            return answers\n        }\n    },\n    watch: {\n        currentQuestion: {\n            immediate: true,\n            handler(){\n                {\n                    this.selectedIndex = null\n                    this.answered = false\n                    this.shuffleAnswers()\n                }\n            }\n        }\n    },\n    methods: {\n        selectAnswer(index){\n            this.selectedIndex = index\n        },\n        submitAnswer(){\n            let isCorrect = false\n\n            if(this.selectedIndex === this.correctIndex){\n                isCorrect = true\n            }\n            this.answered = true\n            this.increment(isCorrect)\n        },\n        shuffleAnswers(){\n            let answers = [...this.currentQuestion.incorrect_answers, this.currentQuestion.correct_answer]\n            this.shuffledAnswers = _.shuffle(answers)\n            this.correctIndex = this.shuffledAnswers.indexOf(this.currentQuestion.correct_answer)\n        },\n        answerClass(index){\n            let answerClass = ''\n\n            if(!this.answered && this.selectIndex === index){\n                answerClass = 'selected'\n            } else if(this.answered && this.correctIndex === index){\n                answerClass = 'correct'\n            } else if(this.answered && this.selectedIndex === index && this.correctIndex !== index){\n                answerClass = 'incorrect'\n            }\n        }\n    }\n}\n</script>\n\n<style scoped>\n    .list-group{\n        margin-bottom: 15px;\n    }\n    .list-group-item:hover{\n        background-color: #EEE;\n        cursor: pointer;\n    }\n    .btn{\n        margin: 0 5px;\n    }\n    .selected{\n        background-color: lightblue;\n    }\n    .correct{\n        background-color: lightgreen;\n    }\n    .incorrect{\n        background-color: red;\n    }\n</style>"]}]}